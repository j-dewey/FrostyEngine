use hashbrown::HashMap;
use render::winit::keyboard::KeyCode;

pub(crate) const VIRTUALKEYS: [KeyCode; 109] = [
    KeyCode::Digit1,
    KeyCode::Digit2,
    KeyCode::Digit3,
    KeyCode::Digit4,
    KeyCode::Digit5,
    KeyCode::Digit6,
    KeyCode::Digit7,
    KeyCode::Digit8,
    KeyCode::Digit9,
    KeyCode::Digit0,
    KeyCode::KeyA,
    KeyCode::KeyB,
    KeyCode::KeyC,
    KeyCode::KeyD,
    KeyCode::KeyE,
    KeyCode::KeyF,
    KeyCode::KeyG,
    KeyCode::KeyH,
    KeyCode::KeyI,
    KeyCode::KeyJ,
    KeyCode::KeyK,
    KeyCode::KeyL,
    KeyCode::KeyM,
    KeyCode::KeyN,
    KeyCode::KeyO,
    KeyCode::KeyP,
    KeyCode::KeyQ,
    KeyCode::KeyR,
    KeyCode::KeyS,
    KeyCode::KeyT,
    KeyCode::KeyU,
    KeyCode::KeyV,
    KeyCode::KeyW,
    KeyCode::KeyX,
    KeyCode::KeyY,
    KeyCode::KeyZ,
    KeyCode::Escape,
    KeyCode::F1,
    KeyCode::F2,
    KeyCode::F3,
    KeyCode::F4,
    KeyCode::F5,
    KeyCode::F6,
    KeyCode::F7,
    KeyCode::F8,
    KeyCode::F9,
    KeyCode::F10,
    KeyCode::F11,
    KeyCode::F12,
    KeyCode::F13,
    KeyCode::F14,
    KeyCode::F15,
    KeyCode::Pause,
    KeyCode::Insert,
    KeyCode::Home,
    KeyCode::Delete,
    KeyCode::End,
    KeyCode::PageDown,
    KeyCode::PageUp,
    KeyCode::ArrowLeft,
    KeyCode::ArrowUp,
    KeyCode::ArrowRight,
    KeyCode::ArrowDown,
    KeyCode::Backspace,
    KeyCode::Space,
    KeyCode::NumLock,
    KeyCode::Numpad0,
    KeyCode::Numpad1,
    KeyCode::Numpad2,
    KeyCode::Numpad3,
    KeyCode::Numpad4,
    KeyCode::Numpad5,
    KeyCode::Numpad6,
    KeyCode::Numpad7,
    KeyCode::Numpad8,
    KeyCode::Numpad9,
    KeyCode::Backslash,
    KeyCode::CapsLock,
    KeyCode::Comma,
    KeyCode::Convert,
    KeyCode::Equal,
    KeyCode::KanaMode,
    KeyCode::KanaMode,
    KeyCode::AltLeft,
    KeyCode::BracketLeft,
    KeyCode::ControlLeft,
    KeyCode::ShiftLeft,
    KeyCode::LaunchMail,
    KeyCode::MediaSelect,
    KeyCode::MediaStop,
    KeyCode::Minus,
    KeyCode::AudioVolumeMute,
    KeyCode::NumpadEnter,
    KeyCode::NumpadEqual,
    KeyCode::Period,
    KeyCode::Power,
    KeyCode::AltRight,
    KeyCode::BracketRight,
    KeyCode::ControlRight,
    KeyCode::ShiftRight,
    KeyCode::Semicolon,
    KeyCode::Slash,
    KeyCode::Sleep,
    KeyCode::MediaStop,
    KeyCode::Tab,
    KeyCode::Undo,
    KeyCode::AudioVolumeDown,
    KeyCode::AudioVolumeUp,
    KeyCode::WakeUp,
];

pub(super) fn create_keyboard_hash_map() -> HashMap<KeyCode, bool> {
    // constructs a hashmap with each key press as an index
    let mut keys: HashMap<KeyCode, bool> = HashMap::new();
    for k in &VIRTUALKEYS {
        keys.insert(*k, false);
    }
    keys
}
